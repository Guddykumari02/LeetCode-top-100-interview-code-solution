Given an integer n, return true if it is a power of three. Otherwise, return false.

An integer n is a power of three, if there exists an integer x such that n == 3x.

 

Example 1:

Input: n = 27
Output: true
Example 2:

Input: n = 0
Output: false
Example 3:

Input: n = 9
Output: true
 

Constraints:

-231 <= n <= 231 - 1
 

Follow up: Could you solve it without loops/recursion?
Accepted
457,348
Submissions
1,052,549

Solutions:
class Solution {
    public int reverse(int x) {
    double ans=0;
   
    //taking one by one digitis 
    //for reversing
    while(x!=0)
    {
        double rev=x%10;
        ans=ans*10+rev;
        
          if(ans<=Integer.MIN_VALUE || ans>=Integer.MAX_VALUE)
          return 0;
       
        x=x/10;
    }
    
       return (int)ans;
    }
}
